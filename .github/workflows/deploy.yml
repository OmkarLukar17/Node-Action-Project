name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
          
      - name: Build and push Docker image
        run: |
          docker buildx build --file Dockerfile --tag 919715752267.dkr.ecr.us-east-1.amazonaws.com/devops-app:$GITHUB_SHA --push .
        env:
          # Ensure the AWS credentials are available for Docker to use
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      # - name: Deploy to ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ecs-task-definition.json
      #     service: your-ecs-service-name
      #     cluster: your-ecs-cluster-name
      #     wait-for-service-stability: true

      # - name: Run Integration Tests
      #   run: |
      #     # Replace with your integration testing commands
      #     curl -f http://your-application-url/health || exit 1

      # - name: Rollback on Failure
      #   if: failure()
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ecs-task-definition.json
      #     service: your-ecs-service-name
      #     cluster: your-ecs-cluster-name
      #     wait-for-service-stability: true
      #     rollback: true
